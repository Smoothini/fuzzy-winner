switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 16 (in16s,out16s_2) [] {

 }
 final {
 rule in16s => out16s_2 []
 }
switch 20 (in20s,out20s_2) [] {

 }
 final {
 rule in20s => out20s_2 []
 }
switch 24 (in24s,out24s) [] {
 rule in24s => out24s []
 }
 final {
 rule in24s => out24s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in3s []
link out3s => in21s []
link out3s_2 => in16s []
link out21s => in24s []
link out21s_2 => in24s []
link out16s_2 => in20s []
link out20s_2 => in21s []
spec
port=in0s -> (!(port=out24s) U ((port=in3s) & (TRUE U (port=out24s))))