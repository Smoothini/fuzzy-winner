switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 14 (in14s,out14s_2) [] {

 }
 final {
 rule in14s => out14s_2 []
 }
switch 28 (in28s,out28s) [] {
 rule in28s => out28s []
 }
 final {
 rule in28s => out28s []
 }
link  => in0s []
link out0s => in11s []
link out0s_2 => in11s []
link out11s => in13s []
link out11s_2 => in13s []
link out13s => in28s []
link out13s_2 => in14s []
link out14s_2 => in28s []
spec
port=in0s -> (!(port=out28s) U ((port=in11s) & (TRUE U (port=out28s))))