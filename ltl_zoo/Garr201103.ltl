switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 32 (in32s,out32s,out32s_2) [] {
 rule in32s => out32s []
 }
 final {
 rule in32s => out32s_2 []
 }
switch 34 (in34s,out34s,out34s_2) [] {
 rule in34s => out34s []
 }
 final {
 rule in34s => out34s_2 []
 }
switch 36 (in36s,out36s) [] {
 rule in36s => out36s []
 }
 final {
     
 }
switch 37 (in37s,out37s_2) [] {

 }
 final {
 rule in37s => out37s_2 []
 }
switch 56 (in56s,out56s) [] {
 rule in56s => out56s []
 }
 final {
 rule in56s => out56s []
 }
link  => in0s []
link out0s => in32s []
link out0s_2 => in32s []
link out32s => in34s []
link out32s_2 => in34s []
link out34s => in36s []
link out34s_2 => in37s []
link out36s => in56s []
link out37s_2 => in56s []
spec
port=in0s -> (!(port=out56s) U ((port=in32s) & (TRUE U (port=out56s))))