switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 32 (in32s,out32s) [] {
 rule in32s => out32s []
 }
 final {
     
 }
switch 38 (in38s,out38s_2) [] {

 }
 final {
 rule in38s => out38s_2 []
 }
switch 39 (in39s,out39s) [] {
 rule in39s => out39s []
 }
 final {
 rule in39s => out39s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in8s []
link out1s_2 => in8s []
link out8s => in32s []
link out8s_2 => in38s []
link out32s => in39s []
link out38s_2 => in39s []
spec
port=in0s -> (!(port=out39s) U ((port=in8s) & (TRUE U (port=out39s))))