switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 23 (in23s,out23s,out23s_2) [] {
 rule in23s => out23s []
 }
 final {
 rule in23s => out23s_2 []
 }
switch 24 (in24s,out24s,out24s_2) [] {
 rule in24s => out24s []
 }
 final {
 rule in24s => out24s_2 []
 }
switch 22 (in22s,out22s_2) [] {

 }
 final {
 rule in22s => out22s_2 []
 }
switch 25 (in25s,out25s) [] {
 rule in25s => out25s []
 }
 final {
 rule in25s => out25s []
 }
link  => in0s []
link out0s => in20s []
link out0s_2 => in20s []
link out20s => in21s []
link out20s_2 => in21s []
link out21s => in23s []
link out21s_2 => in22s []
link out23s => in24s []
link out23s_2 => in24s []
link out24s => in25s []
link out24s_2 => in25s []
link out22s_2 => in23s []
spec
port=in0s -> (!(port=out25s) U ((port=in24s) & (TRUE U (port=out25s))))