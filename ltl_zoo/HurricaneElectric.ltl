switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 19 (in19s,out19s,out19s_2) [] {
 rule in19s => out19s []
 }
 final {
 rule in19s => out19s_2 []
 }
switch 2 (in2s,out2s_2) [] {

 }
 final {
 rule in2s => out2s_2 []
 }
switch 20 (in20s,out20s) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s []
 }
link  => in0s []
link out0s => in12s []
link out0s_2 => in2s []
link out12s => in19s []
link out12s_2 => in19s []
link out19s => in20s []
link out19s_2 => in20s []
link out2s_2 => in12s []
spec
port=in0s -> (!(port=out20s) U ((port=in19s) & (TRUE U (port=out20s))))