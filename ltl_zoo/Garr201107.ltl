switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 33 (in33s,out33s,out33s_2) [] {
 rule in33s => out33s []
 }
 final {
 rule in33s => out33s_2 []
 }
switch 35 (in35s,out35s,out35s_2) [] {
 rule in35s => out35s []
 }
 final {
 rule in35s => out35s_2 []
 }
switch 37 (in37s,out37s) [] {
 rule in37s => out37s []
 }
 final {
     
 }
switch 38 (in38s,out38s_2) [] {

 }
 final {
 rule in38s => out38s_2 []
 }
switch 57 (in57s,out57s) [] {
 rule in57s => out57s []
 }
 final {
 rule in57s => out57s []
 }
link  => in0s []
link out0s => in33s []
link out0s_2 => in33s []
link out33s => in35s []
link out33s_2 => in35s []
link out35s => in37s []
link out35s_2 => in38s []
link out37s => in57s []
link out38s_2 => in57s []
spec
port=in0s -> (!(port=out57s) U ((port=in33s) & (TRUE U (port=out57s))))