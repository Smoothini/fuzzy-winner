switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 34 (in34s,out34s,out34s_2) [] {
 rule in34s => out34s []
 }
 final {
 rule in34s => out34s_2 []
 }
switch 35 (in35s,out35s,out35s_2) [] {
 rule in35s => out35s []
 }
 final {
 rule in35s => out35s_2 []
 }
switch 20 (in20s,out20s_2) [] {

 }
 final {
 rule in20s => out20s_2 []
 }
switch 36 (in36s,out36s) [] {
 rule in36s => out36s []
 }
 final {
 rule in36s => out36s []
 }
link  => in0s []
link out0s => in2s []
link out0s_2 => in2s []
link out2s => in30s []
link out2s_2 => in20s []
link out30s => in34s []
link out30s_2 => in34s []
link out34s => in35s []
link out34s_2 => in35s []
link out35s => in36s []
link out35s_2 => in36s []
link out20s_2 => in30s []
spec
port=in0s -> (!(port=out36s) U ((port=in2s) & (TRUE U (port=out36s))))