switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 16 (in16s,out16s,out16s_2) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 15 (in15s,out15s_2) [] {

 }
 final {
 rule in15s => out15s_2 []
 }
switch 18 (in18s,out18s) [] {
 rule in18s => out18s []
 }
 final {
 rule in18s => out18s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in3s []
link out3s => in16s []
link out3s_2 => in15s []
link out16s => in17s []
link out16s_2 => in17s []
link out17s => in18s []
link out17s_2 => in18s []
link out15s_2 => in16s []
spec
port=in0s -> (!(port=out18s) U ((port=in16s) & (TRUE U (port=out18s))))