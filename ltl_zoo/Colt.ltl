switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 101 (in101s,out101s,out101s_2) [] {
 rule in101s => out101s []
 }
 final {
 rule in101s => out101s_2 []
 }
switch 98 (in98s,out98s_2) [] {

 }
 final {
 rule in98s => out98s_2 []
 }
switch 104 (in104s,out104s) [] {
 rule in104s => out104s []
 }
 final {
 rule in104s => out104s []
 }
link  => in0s []
link out0s => in10s []
link out0s_2 => in10s []
link out10s => in101s []
link out10s_2 => in98s []
link out101s => in104s []
link out101s_2 => in104s []
link out98s_2 => in101s []
spec
port=in0s -> (!(port=out104s) U ((port=in10s) & (TRUE U (port=out104s))))