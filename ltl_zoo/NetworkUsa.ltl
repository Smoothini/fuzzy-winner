switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 25 (in25s,out25s,out25s_2) [] {
 rule in25s => out25s []
 }
 final {
 rule in25s => out25s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 31 (in31s,out31s_2) [] {

 }
 final {
 rule in31s => out31s_2 []
 }
switch 32 (in32s,out32s_2) [] {

 }
 final {
 rule in32s => out32s_2 []
 }
switch 33 (in33s,out33s_2) [] {

 }
 final {
 rule in33s => out33s_2 []
 }
switch 34 (in34s,out34s) [] {
 rule in34s => out34s []
 }
 final {
 rule in34s => out34s []
 }
link  => in0s []
link out0s => in7s []
link out0s_2 => in7s []
link out7s => in25s []
link out7s_2 => in25s []
link out25s => in30s []
link out25s_2 => in30s []
link out30s => in34s []
link out30s_2 => in31s []
link out31s_2 => in32s []
link out32s_2 => in33s []
link out33s_2 => in34s []
spec
port=in0s -> (!(port=out34s) U ((port=in25s) & (TRUE U (port=out34s))))