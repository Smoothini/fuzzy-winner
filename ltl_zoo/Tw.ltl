switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 3 (in3s,out3s) [] {
 rule in3s => out3s []
 }
 final {
     
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 32 (in32s,out32s,out32s_2) [] {
 rule in32s => out32s []
 }
 final {
 rule in32s => out32s_2 []
 }
switch 47 (in47s,out47s,out47s_2) [] {
 rule in47s => out47s []
 }
 final {
 rule in47s => out47s_2 []
 }
switch 6 (in6s,out6s_2) [] {

 }
 final {
 rule in6s => out6s_2 []
 }
switch 63 (in63s,out63s) [] {
 rule in63s => out63s []
 }
 final {
 rule in63s => out63s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in3s []
link out1s_2 => in6s []
link out3s => in10s []
link out10s => in32s []
link out10s_2 => in32s []
link out32s => in47s []
link out32s_2 => in47s []
link out47s => in63s []
link out47s_2 => in63s []
link out6s_2 => in10s []
spec
port=in0s -> (!(port=out63s) U ((port=in32s) & (TRUE U (port=out63s))))