switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 16 (in16s,out16s) [] {
 rule in16s => out16s []
 }
 final {
     
 }
switch 19 (in19s,out19s,out19s_2) [] {
 rule in19s => out19s []
 }
 final {
 rule in19s => out19s_2 []
 }
switch 18 (in18s,out18s_2) [] {

 }
 final {
 rule in18s => out18s_2 []
 }
switch 20 (in20s,out20s) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s []
 }
link  => in0s []
link out0s => in11s []
link out0s_2 => in11s []
link out11s => in16s []
link out11s_2 => in18s []
link out16s => in19s []
link out19s => in20s []
link out19s_2 => in20s []
link out18s_2 => in19s []
spec
port=in0s -> (!(port=out20s) U ((port=in11s) & (TRUE U (port=out20s))))