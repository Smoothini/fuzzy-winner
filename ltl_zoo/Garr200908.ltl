switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 29 (in29s,out29s,out29s_2) [] {
 rule in29s => out29s []
 }
 final {
 rule in29s => out29s_2 []
 }
switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 33 (in33s,out33s) [] {
 rule in33s => out33s []
 }
 final {
     
 }
switch 48 (in48s,out48s_2) [] {

 }
 final {
 rule in48s => out48s_2 []
 }
switch 52 (in52s,out52s) [] {
 rule in52s => out52s []
 }
 final {
 rule in52s => out52s []
 }
link  => in0s []
link out0s => in29s []
link out0s_2 => in29s []
link out29s => in31s []
link out29s_2 => in31s []
link out31s => in33s []
link out31s_2 => in48s []
link out33s => in52s []
link out48s_2 => in52s []
spec
port=in0s -> (!(port=out52s) U ((port=in29s) & (TRUE U (port=out52s))))