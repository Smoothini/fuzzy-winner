switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 18 (in18s,out18s_2) [] {

 }
 final {
 rule in18s => out18s_2 []
 }
switch 19 (in19s,out19s_2) [] {

 }
 final {
 rule in19s => out19s_2 []
 }
switch 20 (in20s,out20s) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in6s []
link out1s_2 => in6s []
link out6s => in17s []
link out6s_2 => in17s []
link out17s => in20s []
link out17s_2 => in18s []
link out18s_2 => in19s []
link out19s_2 => in20s []
spec
port=in0s -> (!(port=out20s) U ((port=in1s) & (TRUE U (port=out20s))))