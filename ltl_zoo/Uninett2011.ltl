switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 24 (in24s,out24s,out24s_2) [] {
 rule in24s => out24s []
 }
 final {
 rule in24s => out24s_2 []
 }
switch 25 (in25s,out25s,out25s_2) [] {
 rule in25s => out25s []
 }
 final {
 rule in25s => out25s_2 []
 }
switch 1 (in1s,out1s_2) [] {

 }
 final {
 rule in1s => out1s_2 []
 }
switch 38 (in38s,out38s) [] {
 rule in38s => out38s []
 }
 final {
 rule in38s => out38s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in1s []
link out3s => in22s []
link out3s_2 => in22s []
link out22s => in24s []
link out22s_2 => in24s []
link out24s => in25s []
link out24s_2 => in25s []
link out25s => in38s []
link out25s_2 => in38s []
link out1s_2 => in3s []
spec
port=in0s -> (!(port=out38s) U ((port=in24s) & (TRUE U (port=out38s))))