switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 52 (in52s,out52s,out52s_2) [] {
 rule in52s => out52s []
 }
 final {
 rule in52s => out52s_2 []
 }
switch 56 (in56s,out56s,out56s_2) [] {
 rule in56s => out56s []
 }
 final {
 rule in56s => out56s_2 []
 }
switch 55 (in55s,out55s_2) [] {

 }
 final {
 rule in55s => out55s_2 []
 }
switch 57 (in57s,out57s) [] {
 rule in57s => out57s []
 }
 final {
 rule in57s => out57s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in3s []
link out3s => in52s []
link out3s_2 => in52s []
link out52s => in56s []
link out52s_2 => in55s []
link out56s => in57s []
link out56s_2 => in57s []
link out55s_2 => in56s []
spec
port=in0s -> (!(port=out57s) U ((port=in56s) & (TRUE U (port=out57s))))