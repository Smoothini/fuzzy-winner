switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 54 (in54s,out54s_2) [] {

 }
 final {
 rule in54s => out54s_2 []
 }
switch 63 (in63s,out63s) [] {
 rule in63s => out63s []
 }
 final {
 rule in63s => out63s []
 }
link  => in0s []
link out0s => in2s []
link out0s_2 => in2s []
link out2s => in7s []
link out2s_2 => in7s []
link out7s => in22s []
link out7s_2 => in22s []
link out22s => in63s []
link out22s_2 => in54s []
link out54s_2 => in63s []
spec
port=in0s -> (!(port=out63s) U ((port=in2s) & (TRUE U (port=out63s))))