switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 24 (in24s,out24s,out24s_2) [] {
 rule in24s => out24s []
 }
 final {
 rule in24s => out24s_2 []
 }
switch 26 (in26s,out26s,out26s_2) [] {
 rule in26s => out26s []
 }
 final {
 rule in26s => out26s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 31 (in31s,out31s) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s []
 }
link  => in0s []
link out0s => in8s []
link out0s_2 => in8s []
link out8s => in24s []
link out8s_2 => in9s []
link out24s => in26s []
link out24s_2 => in26s []
link out26s => in31s []
link out26s_2 => in31s []
link out9s_2 => in24s []
spec
port=in0s -> (!(port=out31s) U ((port=in8s) & (TRUE U (port=out31s))))