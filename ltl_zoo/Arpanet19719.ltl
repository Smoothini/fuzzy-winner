switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 15 (in15s,out15s) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s []
 }
link  => in5s []
link out5s => in10s []
link out5s_2 => in10s []
link out10s => in12s []
link out10s_2 => in11s []
link out12s => in14s []
link out12s_2 => in14s []
link out14s => in15s []
link out14s_2 => in15s []
link out11s_2 => in12s []
spec
port=in5s -> (!(port=out15s) U ((port=in10s) & (TRUE U (port=out15s))))