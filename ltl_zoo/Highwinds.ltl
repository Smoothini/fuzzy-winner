switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 14 (in14s,out14s_2) [] {

 }
 final {
 rule in14s => out14s_2 []
 }
switch 16 (in16s,out16s) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s []
 }
link  => in0s []
link out0s => in2s []
link out0s_2 => in2s []
link out2s => in9s []
link out2s_2 => in14s []
link out9s => in15s []
link out15s => in16s []
link out15s_2 => in16s []
link out14s_2 => in15s []
spec
port=in0s -> (!(port=out16s) U ((port=in2s) & (TRUE U (port=out16s))))