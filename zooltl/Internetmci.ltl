switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 3 (in3s,out3s) [] {
 rule in3s => out3s []
 }
 final {
     
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 16 (in16s,out16s,out16s_2) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 18 (in18s,out18s) [] {
 rule in18s => out18s []
 }
 final {
 rule in18s => out18s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in2s []
link out1s_2 => in2s []
link out2s => in3s []
link out2s_2 => in7s []
link out3s => in7s []
link out7s => in12s []
link out7s_2 => in12s []
link out12s => in14s []
link out12s_2 => in14s []
link out14s => in15s []
link out14s_2 => in15s []
link out15s => in16s []
link out15s_2 => in16s []
link out16s => in17s []
link out16s_2 => in17s []
link out17s => in18s []
link out17s_2 => in18s []
spec
port=in0s -> (!(port=out18s) U ((port=in1s) & (TRUE U (port=out18s))))