switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 23 (in23s,out23s) [] {
 rule in23s => out23s []
 }
 final {
 rule in23s => out23s []
 }
link  => in2s []
link out2s => in12s []
link out2s_2 => in13s []
link out12s => in13s []
link out13s => in14s []
link out13s_2 => in14s []
link out14s => in21s []
link out14s_2 => in21s []
link out21s => in22s []
link out21s_2 => in22s []
link out22s => in23s []
link out22s_2 => in23s []
spec
port=in2s -> (!(port=out23s) U ((port=in13s) & (TRUE U (port=out23s))))