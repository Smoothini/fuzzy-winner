switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 10 (in10s,out10s) [] {
 rule in10s => out10s []
 }
 final {
     
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
     
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s []
 }
link  => in7s []
link out7s => in8s []
link out7s_2 => in8s []
link out8s => in9s []
link out8s_2 => in12s []
link out9s => in10s []
link out10s => in11s []
link out11s => in12s []
link out12s => in13s []
link out12s_2 => in13s []
link out13s => in14s []
link out13s_2 => in14s []
spec
port=in7s -> (!(port=out14s) U ((port=in8s) & (TRUE U (port=out14s))))