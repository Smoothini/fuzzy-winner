switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 33 (in33s,out33s,out33s_2) [] {
 rule in33s => out33s []
 }
 final {
 rule in33s => out33s_2 []
 }
switch 51 (in51s,out51s) [] {
 rule in51s => out51s []
 }
 final {
     
 }
switch 36 (in36s,out36s_2) [] {

 }
 final {
 rule in36s => out36s_2 []
 }
switch 55 (in55s,out55s) [] {
 rule in55s => out55s []
 }
 final {
 rule in55s => out55s []
 }
link  => in13s []
link out13s => in30s []
link out13s_2 => in30s []
link out30s => in31s []
link out30s_2 => in31s []
link out31s => in33s []
link out31s_2 => in33s []
link out33s => in51s []
link out33s_2 => in36s []
link out51s => in55s []
link out36s_2 => in55s []
spec
port=in13s -> (!(port=out55s) U ((port=in33s) & (TRUE U (port=out55s))))