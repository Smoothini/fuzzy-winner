switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 15 (in15s,out15s) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s []
 }
link  => in0s []
link out0s => in2s []
link out0s_2 => in2s []
link out2s => in5s []
link out2s_2 => in5s []
link out5s => in11s []
link out5s_2 => in11s []
link out11s => in12s []
link out11s_2 => in15s []
link out12s => in15s []
spec
port=in0s -> (!(port=out15s) U ((port=in2s) & (TRUE U (port=out15s))))