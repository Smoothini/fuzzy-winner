switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 61 (in61s,out61s,out61s_2) [] {
 rule in61s => out61s []
 }
 final {
 rule in61s => out61s_2 []
 }
switch 62 (in62s,out62s) [] {
 rule in62s => out62s []
 }
 final {
     
 }
switch 63 (in63s,out63s,out63s_2) [] {
 rule in63s => out63s []
 }
 final {
 rule in63s => out63s_2 []
 }
switch 64 (in64s,out64s) [] {
 rule in64s => out64s []
 }
 final {
 rule in64s => out64s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in3s []
link out1s_2 => in3s []
link out3s => in22s []
link out3s_2 => in22s []
link out22s => in61s []
link out22s_2 => in61s []
link out61s => in62s []
link out61s_2 => in63s []
link out62s => in63s []
link out63s => in64s []
link out63s_2 => in64s []
spec
port=in0s -> (!(port=out64s) U ((port=in1s) & (TRUE U (port=out64s))))