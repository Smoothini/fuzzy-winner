switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 5 (in5s,out5s) [] {
 rule in5s => out5s []
 }
 final {
     
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
     
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 21 (in21s,out21s) [] {
 rule in21s => out21s []
 }
 final {
     
 }
switch 32 (in32s,out32s,out32s_2) [] {
 rule in32s => out32s []
 }
 final {
 rule in32s => out32s_2 []
 }
switch 35 (in35s,out35s) [] {
 rule in35s => out35s []
 }
 final {
 rule in35s => out35s []
 }
link  => in2s []
link out2s => in4s []
link out2s_2 => in4s []
link out4s => in5s []
link out4s_2 => in32s []
link out5s => in8s []
link out8s => in9s []
link out9s => in21s []
link out21s => in32s []
link out32s => in35s []
link out32s_2 => in35s []
spec
port=in2s -> (!(port=out35s) U ((port=in32s) & (TRUE U (port=out35s))))