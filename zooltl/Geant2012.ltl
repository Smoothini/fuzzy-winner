switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 9 (in9s,out9s,out9s_2) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s_2 []
 }
switch 15 (in15s,out15s) [] {
 rule in15s => out15s []
 }
 final {
     
 }
switch 29 (in29s,out29s) [] {
 rule in29s => out29s []
 }
 final {
 rule in29s => out29s []
 }
link  => in0s []
link out0s => in2s []
link out0s_2 => in2s []
link out2s => in4s []
link out2s_2 => in4s []
link out4s => in6s []
link out4s_2 => in6s []
link out6s => in7s []
link out6s_2 => in7s []
link out7s => in8s []
link out7s_2 => in8s []
link out8s => in9s []
link out8s_2 => in9s []
link out9s => in15s []
link out9s_2 => in29s []
link out15s => in29s []
spec
port=in0s -> (!(port=out29s) U ((port=in2s) & (TRUE U (port=out29s))))