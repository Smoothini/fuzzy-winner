switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 10 (in10s,out10s) [] {
 rule in10s => out10s []
 }
 final {
     
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s []
 }
link  => in3s []
link out3s => in5s []
link out3s_2 => in5s []
link out5s => in8s []
link out5s_2 => in8s []
link out8s => in10s []
link out8s_2 => in11s []
link out10s => in12s []
link out11s_2 => in12s []
spec
port=in3s -> (!(port=out12s) U ((port=in8s) & (TRUE U (port=out12s))))