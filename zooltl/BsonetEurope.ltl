switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 9 (in9s,out9s,out9s_2) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s_2 []
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
     
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
     
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 15 (in15s,out15s) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s []
 }
link  => in0s []
link out0s => in1s []
link out0s_2 => in1s []
link out1s => in9s []
link out1s_2 => in9s []
link out9s => in11s []
link out9s_2 => in14s []
link out11s => in13s []
link out13s => in14s []
link out14s => in15s []
link out14s_2 => in15s []
spec
port=in0s -> (!(port=out15s) U ((port=in1s) & (TRUE U (port=out15s))))