switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
     
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
     
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
     
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 5 (in5s,out5s_2) [] {

 }
 final {
 rule in5s => out5s_2 []
 }
switch 16 (in16s,out16s) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s []
 }
link  => in2s []
link out2s => in4s []
link out2s_2 => in4s []
link out4s => in8s []
link out4s_2 => in5s []
link out8s => in12s []
link out12s => in13s []
link out13s => in14s []
link out14s => in15s []
link out15s => in16s []
link out15s_2 => in16s []
link out5s_2 => in15s []
spec
port=in2s -> (!(port=out16s) U ((port=in4s) & (TRUE U (port=out16s))))