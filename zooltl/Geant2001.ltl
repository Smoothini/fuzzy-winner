switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 16 (in16s,out16s) [] {
 rule in16s => out16s []
 }
 final {
     
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 19 (in19s,out19s_2) [] {

 }
 final {
 rule in19s => out19s_2 []
 }
switch 25 (in25s,out25s) [] {
 rule in25s => out25s []
 }
 final {
 rule in25s => out25s []
 }
link  => in1s []
link out1s => in2s []
link out1s_2 => in2s []
link out2s => in3s []
link out2s_2 => in3s []
link out3s => in16s []
link out3s_2 => in19s []
link out16s => in20s []
link out20s => in21s []
link out20s_2 => in21s []
link out21s => in25s []
link out21s_2 => in25s []
link out19s_2 => in20s []
spec
port=in1s -> (!(port=out25s) U ((port=in2s) & (TRUE U (port=out25s))))